name: Build All Asterisk Docker Images (Matrix)

on:
  push:
    branches:
      - main
    paths:
      - 'asterisk/supported-asterisk-builds.yml'
      - 'configs/generated/**'
      - '.github/workflows/build-images.yml'
      - '.github/workflows/build-single-image.yml'

  workflow_dispatch:
    inputs:
      push:
        description: "Push images to registry"
        required: false
        default: true
        type: boolean
      registry:
        description: "Docker registry (default: docker.io/andrius/asterisk)"
        required: false
        default: "andrius/asterisk"
        type: string
      max_parallel:
        description: "Maximum parallel builds"
        required: false
        default: "25"
        type: choice
        options:
          - "1"
          - "5"
          - "25"
          - "50"
      filter_version:
        description: "Build only specific version (optional)"
        required: false
        type: string
      filter_distribution:
        description: "Build only specific distribution (optional)"
        required: false
        type: choice
        options:
          - ""
          - "trixie"
          - "bookworm"
          - "bullseye"
          - "buster"
          - "jessie"
          - "stretch"

jobs:
  validate-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch
        run: |
          echo "Current branch/ref: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"

          if [ "${{ github.ref }}" != "refs/heads/main" ]; then
            echo "❌ ERROR: This workflow can only be run on the 'main' branch."
            echo "Current ref: ${{ github.ref }}"
            echo "Expected: refs/heads/main"
            exit 1
          fi

          echo "✅ Branch validation passed - running on main branch"

  prepare-matrix:
    needs: validate-branch
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      total_builds: ${{ steps.generate-matrix.outputs.total_builds }}
      buildable_versions: ${{ steps.generate-matrix.outputs.buildable_versions }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate build matrix
        id: generate-matrix
        uses: ./.github/actions/generate-build-matrix
        with:
          version-pattern: ".*"
          batch-name: "All Asterisk Versions"
          filter-version: ${{ inputs.filter_version }}
          filter-distribution: ${{ inputs.filter_distribution }}

      - name: Display build matrix
        run: |
          echo "## Build Matrix Preview" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Total builds**: ${{ steps.generate-matrix.outputs.total_builds }}" >> $GITHUB_STEP_SUMMARY
          echo "**Buildable versions**: ${{ steps.generate-matrix.outputs.buildable_versions }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Matrix configurations**:" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.generate-matrix.outputs.matrix }}' | jq -r '.include[] | "- \(.version) \(.os)/\(.distribution) [\(.architectures)]"' >> $GITHUB_STEP_SUMMARY || echo "Matrix preview not available" >> $GITHUB_STEP_SUMMARY

  build-matrix:
    needs: [validate-branch, prepare-matrix]
    if: needs.prepare-matrix.outputs.total_builds > 0
    strategy:
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
      fail-fast: false
      max-parallel: ${{ fromJson(inputs.max_parallel || '25') }}

    uses: ./.github/workflows/build-single-image.yml
    with:
      version: ${{ matrix.version }}
      distribution: ${{ matrix.distribution }}
      architectures: ${{ matrix.architectures }}
      additional_tags: ${{ matrix.additional_tags || '' }}
      # Always push on scheduled runs (required for multi-platform builds)
      # For manual runs, respect user input (default: true)
      push: ${{ github.event_name == 'schedule' || inputs.push != false }}
      registry: ${{ inputs.registry || 'andrius/asterisk' }}
    secrets: inherit

  collect-results:
    needs: [prepare-matrix, build-matrix]
    runs-on: ubuntu-latest
    if: always() && needs.prepare-matrix.outputs.total_builds > 0

    steps:
      - name: Collect build results
        run: |
          echo "📊 Collecting build results..."

          MATRIX_RESULT="${{ needs.build-matrix.result }}"
          TOTAL_BUILDS="${{ needs.prepare-matrix.outputs.total_builds }}"

          echo "Matrix job result: $MATRIX_RESULT"
          echo "Total configurations: $TOTAL_BUILDS"
          if [ "$MATRIX_RESULT" == "success" ]; then
            SUCCESSFUL_BUILDS="$TOTAL_BUILDS"
            FAILED_BUILDS="0"
          elif [ "$MATRIX_RESULT" == "failure" ]; then
            SUCCESSFUL_BUILDS="0"
            FAILED_BUILDS="$TOTAL_BUILDS"
          else
            SUCCESSFUL_BUILDS="Unknown"
            FAILED_BUILDS="Unknown"
          fi

          echo "successful_builds=$SUCCESSFUL_BUILDS" >> $GITHUB_ENV
          echo "failed_builds=$FAILED_BUILDS" >> $GITHUB_ENV

  build-report:
    needs: [validate-branch, prepare-matrix, build-matrix, collect-results]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Generate build report
        run: |
          echo "## 🚀 Asterisk Docker Images Build Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Build metadata
          echo "### Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- 📅 **Build Date**: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- 🌿 **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📋 **Registry**: ${{ inputs.registry || 'andrius/asterisk' }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **Push Enabled**: ${{ inputs.push != false }}" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ **Max Parallel**: ${{ inputs.max_parallel || '25' }}" >> $GITHUB_STEP_SUMMARY

          if [ -n "${{ inputs.filter_version }}" ]; then
            echo "- 🎯 **Version Filter**: ${{ inputs.filter_version }}" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY

          # Branch validation results
          echo "### Validation Results" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.validate-branch.result }}" == "success" ]; then
            echo "- ✅ **Branch Validation**: Passed (main branch)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ **Branch Validation**: Failed (not main branch)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**❌ BUILD ABORTED**: This workflow only runs on the main branch." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

          # Matrix generation results
          if [ "${{ needs.prepare-matrix.result }}" == "success" ]; then
            echo "- ✅ **Matrix Generation**: Success" >> $GITHUB_STEP_SUMMARY
            echo "- 🎯 **Total Configurations**: ${{ needs.prepare-matrix.outputs.total_builds }}" >> $GITHUB_STEP_SUMMARY
            echo "- 📦 **Buildable Versions**: ${{ needs.prepare-matrix.outputs.buildable_versions }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ **Matrix Generation**: Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**❌ BUILD ABORTED**: Failed to generate build matrix." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

          echo "" >> $GITHUB_STEP_SUMMARY

          # Build results
          echo "### Build Results" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.build-matrix.result }}" == "success" ]; then
            echo "- ✅ **Overall Status**: All builds successful" >> $GITHUB_STEP_SUMMARY
            echo "- 🎉 **Successful Builds**: ${{ needs.prepare-matrix.outputs.total_builds }}/${{ needs.prepare-matrix.outputs.total_builds }}" >> $GITHUB_STEP_SUMMARY
            echo "- ❌ **Failed Builds**: 0" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.build-matrix.result }}" == "failure" ]; then
            echo "- ❌ **Overall Status**: Some builds failed" >> $GITHUB_STEP_SUMMARY
            echo "- 🎉 **Successful Builds**: Unknown (check individual jobs)" >> $GITHUB_STEP_SUMMARY
            echo "- ❌ **Failed Builds**: Unknown (check individual jobs)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ **Overall Status**: Build cancelled or partial" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 **Result**: ${{ needs.build-matrix.result }}" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY

          # Action items
          echo "### Action Items" >> $GITHUB_STEP_SUMMARY

          if [ "${{ inputs.push != false }}" == "true" ]; then
            if [ "${{ needs.build-matrix.result }}" == "success" ]; then
              echo "- ✅ Images have been pushed to **${{ inputs.registry || 'andrius/asterisk' }}**" >> $GITHUB_STEP_SUMMARY
              echo "- 🔍 Check [Docker Hub](https://hub.docker.com/r/andrius/asterisk/tags) for published images" >> $GITHUB_STEP_SUMMARY
            else
              echo "- ⚠️ Some images may not have been pushed due to build failures" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- ℹ️ Images built locally only (push disabled)" >> $GITHUB_STEP_SUMMARY
            echo "- 🚀 Re-run with **push: true** to publish images" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.build-matrix.result }}" == "failure" ]; then
            echo "- 🔍 Review individual job logs for failure details" >> $GITHUB_STEP_SUMMARY
            echo "- 🛠️ Check configuration files in \`configs/generated/\`" >> $GITHUB_STEP_SUMMARY
            echo "- 📋 Verify \`asterisk/supported-asterisk-builds.yml\` entries" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "_Report generated at $(date '+%Y-%m-%d %H:%M:%S UTC')_" >> $GITHUB_STEP_SUMMARY

      - name: Set workflow status
        run: |
          if [ "${{ needs.validate-branch.result }}" != "success" ]; then
            echo "❌ Workflow failed: Branch validation"
            exit 1
          elif [ "${{ needs.prepare-matrix.result }}" != "success" ]; then
            echo "❌ Workflow failed: Matrix generation"
            exit 1
          elif [ "${{ needs.build-matrix.result }}" == "failure" ]; then
            echo "❌ Workflow failed: Some builds failed"
            exit 1
          else
            echo "✅ Workflow completed successfully"
          fi
